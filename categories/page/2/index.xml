<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Categories on my101du Blog</title>
    <link>https://my101du.github.io/categories/</link>
    <description>Recent content in Categories on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/categories/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/javascript%E9%9A%BE%E7%82%B9%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/javascript%E9%9A%BE%E7%82%B9%E8%AE%B0%E5%BD%95/</guid>
      <description>title: javascript难点记录 permalink: javascript-difficult tags: javascript 一个异步函数，在回调函数里获取外部的变量 如下，messageBoxYesNo() 类似 ajax, 第二个匿名函数类</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/typescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/typescript/</guid>
      <description>title: typescript permalink: typescript tags: frontend js 是一种“弱语言”（脚本），对变量的类型检查不严格。 class Student{ fullName: string; constructor(public firstName,public middleInitial, public lastName){ this.fullName = firstName + &amp;quot; &amp;quot; + middleInitial + &amp;quot; &amp;quot; + lastName; } } interface Person { firstName: string; lastName: string; } function greeter(person: Person){ return &amp;quot;Hello&amp;quot; +</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/jquery-basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/jquery-basic/</guid>
      <description>&lt;p&gt;title: jQuery教程
permalink: study-jQuery
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jQuery&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/jquery-%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/jquery-%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</guid>
      <description>title: jQuery 常用插件 permalink: jquery-commonly-use-plugins tags: jQuery 表单元素 下拉选择框 ddSlick jquery-nice-select ms-Dropdown 时间、日期 cxCalendar 简洁的日历/时间选择 https://github.com/ciaoca/cxCalendar DateRangePicker 日期范围 (这个操作起来很不方便) http://www.daterangepicker.com/ 支持 bootstrap 样式 注 需要 moment.js 支持 Single Date</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/landing-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/landing-page/</guid>
      <description>title: landing page permalink: landing-page tags: foreground The 10 Best Landing Page Builders to Make One Page Websites https://zapier.com/blog/best-landing-page-builders/ 用 MailChimp 提供的 https://mailchimp.com/features/landing-pages/ 太多自定义。。。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/meteor-react-layout%E4%B8%8Eflow-router%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/meteor-react-layout%E4%B8%8Eflow-router%E5%AD%A6%E4%B9%A0/</guid>
      <description>title: meteor-react-layout与flow-router学习 permalink: meteor-react-layout-and-flow-router-study tags: Meteor 这是 Meteor 结合 React 的开发相关知识。 有道是“师傅领进门，修行在个人”。虽</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/meteor%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/meteor%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;title: meteor教程
permalink: meteor-study
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Meteor&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://my101du.github.io/media/15490411859993/meteor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我之前的主要工作是偏向于后端的 PHP+MySQL 开发，对“前端”的理解比较肤浅，以为仅仅是“组织和表现数据，并兼容不同的设备界面”。在熟练使用 jQuery、BootStrap 以及简单尝试过 NodeJS、AngularJS 等后，飘飘然以为自己是“全栈工程师”了。殊不知随着前端技术的发展，“全栈”这个词，应该是指能灵活运用各种前后端技术，组合各种优秀组件，高效开发跨设备的应用。&lt;/p&gt;
&lt;p&gt;最近因缘际会需要学习 &lt;code&gt;Meteor&lt;/code&gt; 这个全栈开发框架，因为和之前熟悉的“前后端分离、数据分层分步传输展示”的开发习惯完全不同，在学习和实践的过程中一方面是不断克服不适，踩坑，另一方面又像探险一样不断发出“哇——”的惊叹。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/express%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/express%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</guid>
      <description>&lt;p&gt;title: Express框架学习
permalink: express-framework
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;express&lt;/li&gt;
&lt;li&gt;nodejs&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/node-%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%8F%98%E5%8A%A8%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/node-%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%8F%98%E5%8A%A8%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF/</guid>
      <description>&lt;p&gt;title: Node 程序的文件变动监控与自动重启
permalink: node-file-monitor-auto-reboot
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nodejs&lt;/li&gt;
&lt;li&gt;pm2&lt;/li&gt;
&lt;li&gt;forever&lt;/li&gt;
&lt;li&gt;supervisor&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/nodejs%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/nodejs%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>title: nodejs快速入门 permalink: nodejs-study tags: nodejs Node.js是一个Javascript运行环境(runtime)。实际上它是对Google V8引擎进行了封装</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/node%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/node%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>title: node操作数据库 permalink: node-and-database tags: frontend MySQL 除了一个很简陋的 node-mysql 用 Sequelize (http://docs.sequelizejs.com) https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001471955049232be7492e76f514d45a2180e2c224eb7a6000</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/superagent%E6%88%96node-crawler%E6%8A%93%E5%8F%96%E9%A1%B5%E9%9D%A2%E5%B9%B6%E7%94%A8cheerio%E6%88%96jsdom%E8%A7%A3%E6%9E%90dom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/superagent%E6%88%96node-crawler%E6%8A%93%E5%8F%96%E9%A1%B5%E9%9D%A2%E5%B9%B6%E7%94%A8cheerio%E6%88%96jsdom%E8%A7%A3%E6%9E%90dom/</guid>
      <description>crawling/scraping node-crawer 爬虫工具 （或 superagent 请求代理模块+express） 结合 cheerio / jsdom 解析爬到的 html 内容(可以认为是 Node.js 版的 jquery) node-crawer （推荐） 安装 npm install crawler Basic Usage 开始 先引入 library requi</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/antd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/antd/</guid>
      <description>title: antd permalink: react-and-antd tags: frontend 开始 使用 codesandbox 快速查看 https://codesandbox.io/s/jnw46698m3 兼容性 对于 IE 系列浏览器，需要提供 es5-shim 和 es6-shim 等 Polyfills 的支持。 如果你使用了 babel，强烈推荐使用 babel-polyfill 和 babel-plugin-transform-runtime 来替代以上两个 s</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/calendar-%E6%97%A5%E5%8E%86%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/calendar-%E6%97%A5%E5%8E%86%E5%BA%93/</guid>
      <description>calendar 日历库 react 类 google calendar 和 outlook 的日历，可拖拉 https://github.com/intljusticemission/react-big-calendar npm install --save react-big-calendar 用 moment 本地化 import BigCalendar from &#39;react-big-calendar&#39; import moment from &#39;moment&#39; const localizer = BigCalendar.momentLocalizer(moment) const MyCalendar = props =&amp;gt; ( &amp;lt;div&amp;gt; &amp;lt;BigCalendar localizer={localizer} events={myEventsList} startAccessor=&amp;quot;start&amp;quot; endAccessor=&amp;quot;end&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt; ) 然后引用样式 react-big-calendar/lib/css/react-big-calendar.css</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/echart-%E5%9B%BE%E8%A1%A8%E5%BA%93-%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/echart-%E5%9B%BE%E8%A1%A8%E5%BA%93-%E5%9F%BA%E7%A1%80/</guid>
      <description>title: EChart 图表库 permalink: echarts-library tags: 前端 echarts 如果你手中有很多的数据，需要把它们制作成直观的图表在网页、手机上显示出来，那么使用各种Javascript 图表库可以帮</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/lodash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/lodash/</guid>
      <description>lodash npm i -s lodash 加载（或只加载需要的部分） // Load the full build. var _ = require(&#39;lodash&#39;); // Load the core build. var _ = require(&#39;lodash/core&#39;); // Load the FP build for immutable auto-curried iteratee-first data-last methods. var fp = require(&#39;lodash/fp&#39;); // Load method categories. var array = require(&#39;lodash/array&#39;); var object = require(&#39;lodash/fp/object&#39;); // Cherry-pick methods for smaller browserify/rollup/webpack bundles.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/lodash%E4%B8%8Eunderscore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/lodash%E4%B8%8Eunderscore/</guid>
      <description>title: Lodash与underscore.md permalink: lodash-underscore tags: javascript Loadash与underscore.md</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/markdown-%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/markdown-%E5%BA%93/</guid>
      <description>markdown 库 搜关键词 https://www.npmjs.com/search?q=markdown https://www.npmjs.com/package/remark https://remark.js.org/ 很多解析库都基于此。 remark 是 unified的创建，专门处理 markdown,其他插件还有处理 html、text 的 https://unified.js.org/#guides （unifi</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/mindmap-%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mindmap-%E5%BA%93/</guid>
      <description>mindmap 库 免费 jsmind 简单易用，但是很多问题作者无法解决。。。如导出等 antd 里使用 修改1. 需要手动设置.jsmind-inner的高度为 min-height 500px 修改2. 需要设置</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/moment-%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/moment-%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86%E5%BA%93/</guid>
      <description>title: moment 时间处理库 permalink: momonent-timezone-library tags: frontend timezone timezone var dateTimeZone = moment(originDate).tz(&amp;quot;America/Los_Angeles&amp;quot;).format(&amp;quot;YYYY-MM-DDTHH:mm:ss&amp;quot;); utc var dateTimeZone = moment(originDate).utc().format(&amp;quot;YYYY-MM-DDTHH:mm:ss&amp;quot;);</description>
    </item>
    
  </channel>
</rss>
