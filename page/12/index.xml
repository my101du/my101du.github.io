<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>my101du Blog</title>
    <link>http://blog.zhishibee.com/</link>
    <description>Recent content on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 07 Aug 2018 16:11:36 +0800</lastBuildDate>
    
        <atom:link href="http://blog.zhishibee.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E4%B8%80%E4%BA%9B-workflow-%E5%BC%95%E6%93%8E/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E4%B8%80%E4%BA%9B-workflow-%E5%BC%95%E6%93%8E/</guid>
      <description>一些 workflow 引擎： https://symfony.com/doc/current/workflow/usage.html https://github.com/brexis/laravel-workflow（Use the Symfony Workflow component in Laravel） https://github.com/phpmentors-jp/workflower https://github.com/formapro/pvm http://phpworkflow.cn/ BPMN</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E4%BB%80%E4%B9%88%E6%98%AF-trait/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E4%BB%80%E4%B9%88%E6%98%AF-trait/</guid>
      <description>什么是 Trait Trait 是一个在 PHP5.4 以后才出现的概念。 因为 PHP 只能单继承。 class A { public $a; } class B { public $b; } // 正常 class C extends A { } // 错误，不支持多继承 class D extends A, B 那么如果有一</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E4%BD%BF%E7%94%A8php%E5%BC%80%E5%8F%91%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E4%BD%BF%E7%94%A8php%E5%BC%80%E5%8F%91%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8A%9F%E8%83%BD/</guid>
      <description>&lt;p&gt;title: 使用PHP开发短信验证码功能
permalink: php-sms-code-validation
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E5%AE%89%E8%A3%85%E4%BB%80%E4%B9%88%E7%9A%84%E7%9C%8Bwordpress-wp-cli-%E9%82%A3%E9%87%8C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E5%AE%89%E8%A3%85%E4%BB%80%E4%B9%88%E7%9A%84%E7%9C%8Bwordpress-wp-cli-%E9%82%A3%E9%87%8C/</guid>
      <description>安装什么的，看wordpress wp-cli 那里 http mock 测试 http 以及 ajax（发送 json） 如果是 laravel 中就可直接用了 其他 PHP 应用中，例如 wordpress, 用 guzzle https://blog.cloudflare.com/using-guzzle-and-phpunit-for-rest-api-testing/ composer require guzzlehttp/guzzle 代码里 use GuzzleHttp\Client;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E7%94%A8%E7%B1%BB-jquery-%E7%9A%84%E8%AF%AD%E6%B3%95%E6%9D%A5%E8%A7%A3%E6%9E%90-html-%E6%96%87%E6%A1%A3%E6%9F%A5%E6%89%BE%E8%8A%82%E7%82%B9-%E5%9C%A8%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E7%9A%84%E6%97%B6%E5%80%99%E5%BE%88%E5%BC%BA%E5%A4%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E7%94%A8%E7%B1%BB-jquery-%E7%9A%84%E8%AF%AD%E6%B3%95%E6%9D%A5%E8%A7%A3%E6%9E%90-html-%E6%96%87%E6%A1%A3%E6%9F%A5%E6%89%BE%E8%8A%82%E7%82%B9-%E5%9C%A8%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E7%9A%84%E6%97%B6%E5%80%99%E5%BE%88%E5%BC%BA%E5%A4%A7/</guid>
      <description>用类 jQuery 的语法来解析 html 文档，查找节点。 在抓取网页的时候很强大。 simplehtmldom 小巧的 http://simplehtmldom.sourceforge.net/ （以及封装过的 https://github.com/sunra/php</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/flask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/flask/</guid>
      <description>flask 快速开始 安装 flask ，创建一个项目目录 pip3 install flask mkdir flask_app cd flask_app 添加文件index.py,内容 from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def hello_world(): return &#39;Hello World!&#39; 运行 $ export FLASK_APP=index.py $ flask run * Running on http://127.0.0.1:5000/ 打开浏览器即</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/python/</guid>
      <description>Python 文档来源 廖雪峰 https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319098638265527beb24f7840aa97de564ccc7f20f6000 CookBook (上面的那个，入门快，但是不完整，例如没有说“接口”) https://python3-cookbook.readthedocs.io/zh_CN/latest/c08/p12_define_interface_or_abstract_base_class.html 安装 centos sudo yum install centos-release-scl # 最新版 https://www.python.org/downloads/ 好像一直失败。。。。（也有可能是代理服务</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/python%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/python%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</guid>
      <description>python高级特性 切片 取一个list或tuple的部分元素 (直接用自带的 Slice 操作符，而不是循环) 对 list 切片 &amp;gt;&amp;gt;&amp;gt; L = [&#39;Michael&#39;, &#39;Sarah&#39;, &#39;Tracy&#39;, &#39;Bob&#39;, &#39;Jack&#39;] # 第一个索引是0, 可</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/scrapy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/scrapy/</guid>
      <description>scrapy install &amp;amp; Start pip3 install scrapy create a new .py file, named &amp;ldquo;myspider.py&amp;rdquo;, content is import scrapy class BlogSpider(scrapy.Spider): name = blogspider&#39; start_urls = [&#39;https://blog.scrapinghub.com&#39;] def parse(self, response): for title in response.css(&#39;.post-header&amp;gt;h2&#39;): yield {&#39;title&#39;: title.css(&#39;a ::text&#39;).extract_first()} for next_page in response.css(&#39;div.prev-post &amp;gt; a&#39;): yield response.follow(next_page, self.parse) pass this py file to scrapy command scrapy runspider myspider.py 运行成功，抓到了想要的数据 如</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/500-%E9%94%99%E8%AF%AF%E7%B3%BB%E5%88%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/500-%E9%94%99%E8%AF%AF%E7%B3%BB%E5%88%97/</guid>
      <description>500 错误系列 ERR_EMPTY_RESPONSE google web server err_empty_response 查看 https://forum.predix.io/questions/20636/neterr-empty-response-response-and-two-response-lo.html https://www.drupal.org/project/rules/issues/2093321 Nginx 的进程占用了太多内存。导致无法分配内存 Cannot allocate momory 查看 错误日志 参考 http://blog.51cto.com/zouquehui/1381502 Nginx 找到配置文件， access_log 和 error_log 日志切割 每日自动 几种方法：</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/aws-step-functions-%E8%BF%98%E6%98%AF-azure-logic-apps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/aws-step-functions-%E8%BF%98%E6%98%AF-azure-logic-apps/</guid>
      <description>AWS step functions 还是 Azure Logic apps 阿里云 挂载磁盘（系统盘 + 用户盘） 查看未挂载的硬盘（名称为/dev/xvdb） # fdisk -l Disk /dev/xvdb doesn&amp;rsquo;t contain a valid partition table 创建分区 # fdisk /dev/xvdb &amp;hellip; 输入n Command (m</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/cdn-%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/cdn-%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;title: CDN 配置
permalink: CDN-config
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运维&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E4%B8%8E%E4%BA%A4%E4%BB%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E4%B8%8E%E4%BA%A4%E4%BB%98/</guid>
      <description>&lt;p&gt;title: 持续集成与交付
permalink: devops-ci-cd
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;server&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E5%85%B7-jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E5%85%B7-jenkins/</guid>
      <description>title: 持续集成工具 Jenkins permalink: CI-jenkins tags: server Jenkins 安装 docker 方式安装 version: &#39;3.5&#39; services: jenkins: image: jenkins:alpine container_name: &amp;quot;jenkins&amp;quot; volumes: - &amp;quot;/docker/volumes/jenkins_home:/var/jenkins_home&amp;quot; ports: - &amp;quot;8080:8080&amp;quot; - &amp;quot;50000:50000&amp;quot; 直接安装到机器 首先下载 war 文件，然后运行命令（需要先安装 java 环境并正常运</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/mongodb-%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/mongodb-%E5%AD%A6%E4%B9%A0/</guid>
      <description>title: mongodb 学习 permalink: mongodb tags: server 安装 以 CentOS 为例 https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/mysql%E6%95%99%E7%A8%8B%E4%B8%8E%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/mysql%E6%95%99%E7%A8%8B%E4%B8%8E%E6%8A%80%E5%B7%A7/</guid>
      <description>permalink: mysql-study-and-skill 在 CentOS 7 下安装 安装服务 &amp;amp; 启动 # MariaDB sudo yum install mariadb-server mariadb sudo systemctl start mariadb # MySQL wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm yum update sudo yum install mysql-server # 查看默认生成的root密码，后面用到 sudo grep &#39;temporary password&#39; /var/log/mysqld.log 后面就一样的</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/postgre-sql-%E5%87%BD%E6%95%B0-%E8%A7%86%E5%9B%BE-%E7%B4%A2%E5%BC%95-%E7%BB%9F%E8%AE%A1-%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/postgre-sql-%E5%87%BD%E6%95%B0-%E8%A7%86%E5%9B%BE-%E7%B4%A2%E5%BC%95-%E7%BB%9F%E8%AE%A1-%E4%BA%8B%E5%8A%A1/</guid>
      <description>聚集函数 从多个输入行中计算出一个结果. 例如 count（计数）、sum（和）、avg（均值）、max（最大值）和min（最小值） SELECT max(temp_lo) FROM weather; 注意 不</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/postgre-sql-%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/postgre-sql-%E6%9F%A5%E8%AF%A2/</guid>
      <description>表 &amp;amp; 记录基本操作 CRUD 增删改查 添加数据、删除数据、查询数据等 # 创建新表 CREATE TABLE user_tbl(name VARCHAR(20), signup_date DATE); # 插入数据 （单条 多条） INSERT INTO user_tbl(name, signup_date) VALUES(&#39;张三&#39;, &#39;2013-12-22&#39;); INSERT INTO EMPLOYEES(</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/postgre-sql-%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/postgre-sql-%E9%85%8D%E7%BD%AE/</guid>
      <description>中文网：http://www.postgres.cn 文档： http://www.postgres.cn/docs/10/ 安装与配置 Ubuntu &amp;amp; Debian sudo apt update &amp;amp;&amp;amp; sudo apt -y upgrade sudo reboot # 默认安装 10 sudo apt install postgresql # 我们需要 11 # 先导入 GPG key</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/redis-%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/redis-%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>redis 内存数据库 install macOS brew install redis brew info redis # start/stop at system init ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.redis.plist # start server launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist # or redis-server /usr/local/etc/redis.conf # or brew services start redis # test is running redis-cli ping # uninstall brew uninstall redis rm ~/Library/LaunchAgents/homebrew.mxcl.redis.plist 设置密码 sudo nano /etc/redis/redis.conf # 去掉注释， foobared 就</description>
    </item>
    
  </channel>
</rss>
