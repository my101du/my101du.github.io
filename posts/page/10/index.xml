<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compose Docs on my101du Blog</title>
    <link>http://blog.zhishibee.com/posts/</link>
    <description>Recent content in Compose Docs on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="http://blog.zhishibee.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E5%85%A5%E9%97%A8%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E5%85%A5%E9%97%A8%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/</guid>
      <description>&lt;p&gt;入门，请求,响应,表单验证
permalink: laravel-tutorial-form-validation
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;laravel&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3-%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-hash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3-%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-hash/</guid>
      <description>安全相关: 加密解密 Hash permalink: laravel-safe-and-encrypt tags: laravel 加密解密 Hash 用户授权</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%8E%88%E6%9D%83-gates-policy-authorization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%8E%88%E6%9D%83-gates-policy-authorization/</guid>
      <description>授权 Gates &amp;amp; Policy （Authorization） permalink: laravel-user-permission-control date: 2017/07/01 10:10:10 tags: laravel 用户正常通过认证后（用户认证服务 登录/注册等），不可能让每一个进入系统的用户都拥有一样</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%AD%98%E5%82%A8%E7%AD%89/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%AD%98%E5%82%A8%E7%AD%89/</guid>
      <description>文件(上传&amp;amp;存储等) permalink: file-store-of-laravel tags: laravel Laravel 使用 Flysystem 扩展包提供强大的文件抽象层。除了使用本地的磁盘外，还可以使用各种云存储（driver），并能够轻</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%9C%AC%E5%9C%B0%E5%8C%96/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%9C%AC%E5%9C%B0%E5%8C%96/</guid>
      <description>本地化 permalink: laravel-localization tags: laravel 简介 语言包文件 语言包存放在 resources/lang 目录下的文件里 在此目录中应用支持的每一种语言都应该有一个单独的子目录 /resources /lang /en messages.php /es messages.php 例如 resources/lang/en/auth.php return [ &#39;failed&#39; =&amp;gt; &#39;These credentials</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%9F%A5%E8%AF%A2%E6%9E%84%E9%80%A0%E5%99%A8%E4%B8%8E%E5%88%86%E9%A1%B5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%9F%A5%E8%AF%A2%E6%9E%84%E9%80%A0%E5%99%A8%E4%B8%8E%E5%88%86%E9%A1%B5/</guid>
      <description>查询构造器与分页 permalink: laravel-query-builder-pagination tags: laravel 数据库连接 目前，Laravel 支持以下四种数据库系统： MySQL Postgres SQLite SQL Server Mongo DB 的支持可以使用这个项目 - laravel-mongodb 配置参数 环境变量中的配</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;p&gt;测试&lt;/p&gt;
&lt;p&gt;permalink: laravel-test
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;laravel&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5/</guid>
      <description>消息通知 permalink: laravel-notification tags: laravel 除了 发送邮件，Laravel 还支持通过多种频道发送通知，包括邮件、短信（通过 Nexmo）以及 Slack 。通知还能存到数据库，这样就能</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E7%BC%93%E5%AD%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E7%BC%93%E5%AD%98/</guid>
      <description>缓存 permalink: laravel-cache tags: laravel 简介 选择缓存驱动 可以使用文件缓存（默认），数据库缓存（数据库比较慢啊，是管理大量session吗？避免 /tmp 下的 session 文件有问题）、Me</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E8%A7%86%E5%9B%BE%E4%B8%8E-blade-%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E8%A7%86%E5%9B%BE%E4%B8%8E-blade-%E6%A8%A1%E6%9D%BF/</guid>
      <description>视图与 Blade 模板 permalink: laravel-view-blade tags: laravel 视图 普通的 可以在路由里，或者控制器里使用 view 方法来加载一个模板文件和数据。 return view(&#39;folder.page&#39;, [&#39;key&#39;=&amp;gt;&#39;value&#39;]) 在所有视图中共享数据 使用ServicePr</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E8%AF%B7%E6%B1%82-%E5%93%8D%E5%BA%94-session-%E4%B8%8E-csrf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E8%AF%B7%E6%B1%82-%E5%93%8D%E5%BA%94-session-%E4%B8%8E-csrf/</guid>
      <description>请求, 响应, Session 与 CSRF permalink: laravel-request-response-session-csrf tags: laravel 以 5.5 为准 请求 获取请求 通过依赖注入的方式来获取当前 HTTP 请求的实例，在控制器方法中使用 Illuminate\Http\Request 类型提示。当前的请求实例将通过 服</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E8%B7%AF%E7%94%B1/</guid>
      <description>路由 permalink: laravel-router tags: laravel 路由 （5.1） 基本路由 在 app/Http/routes.php 文件里定义各种路由（get, post, put, 或者“多重动作”——match 和 any ），然后在 Controller 里写逻辑处理代码 路由参数</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</guid>
      <description>身份验证 permalink: laravel-user-authentication-reset-password tags: laravel 用户认证 快速为新项目生成认证有关的 路由、View 文件等 php artisan make:auth 会发现在 routers/web.php中自动添加了下面的路由 Auth::routes(); //</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E9%82%AE%E4%BB%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E9%82%AE%E4%BB%B6/</guid>
      <description>邮件 permalink: laravel-send-email tags: laravel Laravel 基于 SwiftMailer 函数库提供了一套干净、简洁的邮件 API ，Laravel 为 SMTP 、Mailgun 、SparkPost 、 Amazon SES 、 PHP 的 mail 函数及 sendmail 提供驱动</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E9%9B%86%E5%90%88collection%E4%B8%8E%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0helper-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E9%9B%86%E5%90%88collection%E4%B8%8E%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0helper-functions/</guid>
      <description>集合(Collection)与辅助函数(Helper Functions) permalink: laravel-collection-helper-functions tags: laravel 集合 一些问题 merge 方法在处理数字索引时，会“叠加”元素 在一次使用 merge 来合并两个集合时</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E5%BE%85%E5%AD%A6%E4%B9%A0-%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E5%BE%85%E5%AD%A6%E4%B9%A0-%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</guid>
      <description>待学习- 入门到精通 https://laravelacademy.org/post/9769.html</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/laravel-debugger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/laravel-debugger/</guid>
      <description>下载地址 https://github.com/barryvdh/laravel-debugbar</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/repository-%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/repository-%E6%A8%A1%E5%BC%8F/</guid>
      <description>Repository 模式 都是从 Java 里面学习来的。。。 这是什么 Repository 模式主要思想是建立一个数据操作代理层，把controller里的数据操作剥离出来 an architectural layer that handles communication between the application</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E4%B8%AD%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E4%B8%AD%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84/</guid>
      <description>中大型项目架构 Model :仅仅是一个Eloquent class。 Repository : 辅助 model，处理数据逻辑，然后注入到 service。 Service : 輔助 controll</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E4%BC%98%E5%8C%96/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E4%BC%98%E5%8C%96/</guid>
      <description>优化 permalink: laravel-optimize tags: laravel 性能测试 注意 我一直测的是 https, 所以前后变化非常小，还在检查部署 ssl 后对性能的真实影响还是 ab 的不支持导致（因为把网站改回 http 后，带查数据库</description>
    </item>
    
  </channel>
</rss>
