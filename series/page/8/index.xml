<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Series on my101du Blog</title>
    <link>https://my101du.github.io/series/</link>
    <description>Recent content in Series on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/series/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/macbook-pro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/macbook-pro/</guid>
      <description>外接显示器 2015 之前版本不支持 4k 跑到 60Hz 问题 https://kandrejevs.com/blog/read/50/More-than-30Hz-on-Your-133-Macbook-Pro-and-4K-monitor 可以用 swtichResX 添加 Custom resolutions 设置 Pixel Clock 为 450,00 MHz 彻底关闭自带的显示器 亮度大法 外接后，把笔记本的显示器亮度降到最低。这样</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA/</guid>
      <description>4C 散热 http://bbs.mydigit.cn/read.php?tid=2122765 石墨烯 硅脂+铜片 https://www.bilibili.com/video/av53990831/ 铜管散热（我也是服了） http://www.miui.com/thread-7559640-1-1.html 后盖打孔+防尘网 http://www.miui.com/thread-6958692-1-1.html 挂个风扇？ 红米 Note5 刷魔趣 刷机 解锁BootLoader 小米系列 小米手机到 http://www.miui.com/unlock/index.html 下</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E8%AE%A9%E5%8A%A8%E5%9B%BE%E6%9B%B4%E7%9C%81%E7%A9%BA%E9%97%B4webp%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E8%AE%A9%E5%8A%A8%E5%9B%BE%E6%9B%B4%E7%9C%81%E7%A9%BA%E9%97%B4webp%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E6%8A%80%E6%9C%AF/</guid>
      <description>title: 让动图更省空间——webp图片压缩技术 permalink: webp-image-compress tags: 前端 http://isux.tencent.com/introduction-of-webp.html 百度搜 webp 读音 weppy</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/500-%E9%94%99%E8%AF%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/500-%E9%94%99%E8%AF%AF/</guid>
      <description>500 错误 （1）打开 php-fpm.d/www.conf 的 log 记录，并把日志文件给定可写 （2）打开 php.ini 的 display_errors = on （3）设置 error_reporting = E_ALL | E_STRICT （4）重启 php 服务 wordpress wp-config.php define(&amp;lsquo;WP_DEBUG&amp;rsquo;, true); define(&amp;lsquo;WP_DEBUG_DISPLAY&amp;rsquo;, true); 如果还是不显示错误，看”</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/codeigniter-%E4%B8%BB%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/codeigniter-%E4%B8%BB%E9%A2%98/</guid>
      <description>URL 略，如伪静态，结构等 可以添加后缀 html 等 URI 路由 一般情况下，一个 URL 字符串和它对应的控制器中类和方法是一一对应的关系. 有时候，你可能想改变这种映射</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/codeigniter-%E5%9F%BA%E7%A1%80%E4%B8%8E%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/codeigniter-%E5%9F%BA%E7%A1%80%E4%B8%8E%E6%8A%80%E5%B7%A7/</guid>
      <description>文档地址：https://www.codeigniter.com/user_guide/index.html 简介 特点 Model-View-Controller Based System Extremely Light Weight Full Featured database classes with support</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/codeigniter-%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/codeigniter-%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>快速开始 初始化数据库类 (根据数据库配置信息来初始化) 如果你所有的页面都需要连接数据库，你可以让其自动加载 $this-&amp;gt;load-&amp;gt;database(); 多结果标准查询(多种形式) /** * 对象</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/codeigniter-%E7%B1%BB%E5%BA%93%E4%B8%8E%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0-topics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/codeigniter-%E7%B1%BB%E5%BA%93%E4%B8%8E%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0-topics/</guid>
      <description>类库 用的时候查 基准测试类(观察脚本性能) 计算两个标记点之间的时间差 缓存驱动器 (文件 Redis 等快速缓存的封装 ) 几种最常用的快速缓存的封装 日历类 (何不</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/php%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/php%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83-codeigniter/</guid>
      <description>文件格式 &amp;amp; 换行 &amp;amp; PHP 标签 文件格式 保存为 Unicode（UTF-8）编码格式，不要使用 字节序标记（BOM）(BOM 会在 PHP 的输出中产生副作用， 它会</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/guzzle%E5%A5%BD%E7%94%A8%E7%9A%84php-http-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/guzzle%E5%A5%BD%E7%94%A8%E7%9A%84php-http-client/</guid>
      <description>title: Guzzle——好用的PHP HTTP client 关于 https://github.com/guzzle/guzzle http://docs.guzzlephp.org/en/stable/ 安装 composer require guzzlehttp/guzzle 初步了解 普通方式请求 $client = new GuzzleHttp\Client(); $res = $client-&amp;gt;request(&#39;GET&#39;, &#39;https://api.github.com/user&#39;, [ &#39;auth&#39; =&amp;gt; [&#39;user&#39;, &#39;pass&#39;] ]); echo $res-&amp;gt;getStatusCode(); // &amp;quot;200&amp;quot; echo $res-&amp;gt;getHeader(&#39;content-type&#39;); // &#39;application/json; charset=utf8&#39; echo $res-&amp;gt;getBody(); // {&amp;quot;type&amp;quot;:&amp;quot;User&amp;quot;...&#39; 异步请求 use GuzzleHttp; use</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/html%E9%A1%B5%E9%9D%A2dom%E8%A7%A3%E6%9E%90%E5%99%A8-php-simple-html-dom-parser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/html%E9%A1%B5%E9%9D%A2dom%E8%A7%A3%E6%9E%90%E5%99%A8-php-simple-html-dom-parser/</guid>
      <description>&lt;p&gt;title: HTML页面DOM解析器-PHP Simple HTML DOM Parser
permalink: php-simplehtmldom
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;simplehtmldom&lt;/li&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;[2018-11-30 放弃 simplehtmldom]&lt;/strong&gt;
某天突然发现有问题， 例如一个字符串，只能得到第一个字母。  明明昨天还能得到的 child 内容，突然提示为 null(使用最新的包也不行)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;jQuery&lt;/strong&gt;是一个主要用于网页&lt;strong&gt;前端&lt;/strong&gt;的 javascript 库，能够很方便地让开发者通过选择器方法来查找 HTML 页面元素，例如&lt;code&gt;$(&amp;quot;#container p.test-element&amp;quot;)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但有时候我们不得不使用 &lt;strong&gt;后端脚本语言 PHP&lt;/strong&gt;来解析 HTML 页面结构并做进一步的处理（例如将解析出的文本保存到数据库），自己来写的话，代码是非常复杂的，有很多字符串匹配、正则表达式要考虑。&lt;/p&gt;
&lt;p&gt;有没有办法让 PHP 也能用类似 jQuery 的选择器语法呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/laravel-%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84/</guid>
      <description>helper 函数 vendor\laravel\framework\src\Illuminate\Support\helper.php</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/laravel-%E7%9A%84-dd-%E6%94%B9%E9%80%A0%E4%B8%8E%E5%9C%A8%E5%85%B6%E4%BB%96%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-%E7%9A%84-dd-%E6%94%B9%E9%80%A0%E4%B8%8E%E5%9C%A8%E5%85%B6%E4%BB%96%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/</guid>
      <description>改造样式 默认是黑底 有时候看起来眼花。。。 修改 Dumper.php namespace Illuminate\Support\Debug; use Symfony\Component\VarDumper\Cloner\VarCloner; use Symfony\Component\VarDumper\Dumper\CliDumper; class Dumper { /** * Dump a value with elegance. * * @param mixed $value * @return void */ public function dump($value) { if (class_exists(CliDumper::class)) { $dumper = &#39;cli&#39; === PHP_SAPI ? new CliDumper : new HtmlDumper; echo &#39;&amp;lt;body style=&amp;quot;background-color :</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/laravel-%E8%8F%9C%E5%8D%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-%E8%8F%9C%E5%8D%95/</guid>
      <description>title: laravel 菜单 permalink: laravel-menu tags: laravel</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/lumen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/lumen/</guid>
      <description>&lt;p&gt;Lumen&lt;/p&gt;
&lt;p&gt;permalink: lumen
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;li&gt;lumen&lt;/li&gt;
&lt;li&gt;laravel&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/pusher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/pusher/</guid>
      <description>pusher https://hackernoon.com/create-web-notifications-using-laravel-and-pusher-channels-a9516427d842</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-vue-%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-vue-%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</guid>
      <description>前端开发相关 &amp;amp; Vue 单页应用案例 permalink: laravel-frontend-develop tags: laravel 包括 5.5 及 5.1 的 Elixir 前端指南 Mix 对于 5.1 版本 Elixir 自动化开发流程 Elixir 创建于 Gulp 之上。 使用 Elixir 在 Laravel 应用程序中定义基本的 Gulp 任务，</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/adminlte/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/adminlte/</guid>
      <description>&lt;p&gt;AdminLTE&lt;/p&gt;
&lt;p&gt;permalink: laravel-with-adminlte-develop
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;laravel&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/laravel-admin-%E5%9F%BA%E7%A1%80%E8%A1%A8%E6%A0%BC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-admin-%E5%9F%BA%E7%A1%80%E8%A1%A8%E6%A0%BC/</guid>
      <description>laravel-admin 基础，表格 后台系统大部分都是增删改查，要一个个去创建 controller， views 太麻烦了。如果能够几行命令根据 model 自动生成代码就好了 https://github.com/z-song/laravel-admin 内置用户和</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/laravel-admin-%E6%9B%B4%E5%A4%9A/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-admin-%E6%9B%B4%E5%A4%9A/</guid>
      <description>laravel-admin 更多 https://laravel-admin.org/posts https://discuss.laravel-admin.org/ 扩展开发 暂时略 在开发之前，先看看是不是已经有了，不要重复造轮子。 https://laravel-admin.org/extensions 控制台命令 # 显示当前版本和所有命令 php artisan admin # 安装和卸载larave</description>
    </item>
    
  </channel>
</rss>
