<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cocos2d on my101du Blog</title>
    <link>https://my101du.github.io/tags/cocos2d/</link>
    <description>Recent content in cocos2d on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/tags/cocos2d/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Firefox</title>
      <link>https://my101du.github.io/1/01/firefox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/firefox/</guid>
      <description>标签页、地址栏一行显示节省空间 one liner firefox 打开所有站点都提示 https 错误的问题 输入 about:config 搜索 enterprise_roots 改成 true</description>
    </item>
    
    <item>
      <title>flask</title>
      <link>https://my101du.github.io/1/01/flask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/flask/</guid>
      <description>flask 快速开始 安装 flask ，创建一个项目目录 pip3 install flask mkdir flask_app cd flask_app 添加文件index.py,内容 from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def hello_world(): return &#39;Hello World!&#39; 运行 $ export FLASK_APP=index.py $ flask run * Running on http://127.0.0.1:5000/ 打开浏览器即</description>
    </item>
    
    <item>
      <title>Flow 和 TypeScript</title>
      <link>https://my101du.github.io/1/01/flow-and-typescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/flow-and-typescript/</guid>
      <description>Flow yarn add --dev babel-cli babel-preset-flow create a .babelrc file at the root of your project with &amp;ldquo;flow&amp;rdquo; in your &amp;ldquo;presets&amp;rdquo;. { &amp;quot;presets&amp;quot;: [&amp;quot;flow&amp;quot;] } TypeScript 侵入性太强了。。。</description>
    </item>
    
    <item>
      <title>frp 内网穿透</title>
      <link>https://my101du.github.io/1/01/frp-lan-wan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/frp-lan-wan/</guid>
      <description>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。 下载 可以在 路由器/nas（arm）, 计算机 等很多设备上实现 https://github.com/fatedier/frp/releases 将 frps 及 frps.ini 放到具有</description>
    </item>
    
    <item>
      <title>FTP服务安装与配置</title>
      <link>https://my101du.github.io/1/01/ftp-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/ftp-server/</guid>
      <description>FTP传输模式 文件传输协议（File Transfer Protocol，FTP），基于该协议FTP客户端与服务端可以实现共享文件、上传文件、下载文件。 FTP</description>
    </item>
    
    <item>
      <title>GDPR(欧盟用户隐私法规)</title>
      <link>https://my101du.github.io/1/01/gdpr%E6%AC%A7%E7%9B%9F%E7%94%A8%E6%88%B7%E9%9A%90%E7%A7%81%E6%B3%95%E8%A7%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/gdpr%E6%AC%A7%E7%9B%9F%E7%94%A8%E6%88%B7%E9%9A%90%E7%A7%81%E6%B3%95%E8%A7%84/</guid>
      <description>GDPR(欧盟用户隐私法规) slug: wordpress-and-gdpr tags: wordpress 告诉用户你的数据会被收集，用户可以拒绝或接受 告诉用户会收集哪些数据，存在哪里 用户可以删除自己的数据 通常来</description>
    </item>
    
    <item>
      <title>Gist</title>
      <link>https://my101du.github.io/1/01/gist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/gist/</guid>
      <description>gist 管理代码片段</description>
    </item>
    
    <item>
      <title>Git 基础与常用命令</title>
      <link>https://my101du.github.io/1/01/git-%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/git-%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>Git版本控制 slug: study-git-skill date: 2017/07/01 10:10:10 tags: git 技能 Git 是一个非常好用的分布式版本控制系统 安装 Git 服务器 安装软件包 # Ubuntu $ apt-get install git # 或者 centos $ yum -y install git 升级 git (vscode 的 remote ssh 开发，</description>
    </item>
    
    <item>
      <title>Git 工具与技巧</title>
      <link>https://my101du.github.io/1/01/git-%E5%B7%A5%E5%85%B7%E4%B8%8E%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/git-%E5%B7%A5%E5%85%B7%E4%B8%8E%E6%8A%80%E5%B7%A7/</guid>
      <description>客户端 https://git-scm.com/downloads/guis 以下按推荐顺序排雷 SourceTree（首推） 是大名鼎鼎 Atlanssion 公司的（就是做 Jira Trello Bitbucket 等等的那个） 问题： 卡顿， 历史记录刷新慢 MacOS 下多个 repositorys 在同一</description>
    </item>
    
    <item>
      <title>GitFlow与团队协作</title>
      <link>https://my101du.github.io/1/01/gitflow%E4%B8%8E%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/gitflow%E4%B8%8E%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</guid>
      <description>git commit 内容规则 commit message 应该是清晰明了，说明本次提交的目的。这样才有利于版本控制。 以及与 issue 关联 格式 提交信息包括三个部分：Header，Body 和 Footer Header</description>
    </item>
    
    <item>
      <title>github</title>
      <link>https://my101du.github.io/1/01/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/github/</guid>
      <description>Repository 基本信息 创建 topics 便于归类 Issues 创建 issue Assignees 分配给谁 如果团队项目，就可以给别人，否则私有项目给自己 Labels 标签，可以给一个 issue 多个标签 例如默认自带了 bug 等常见的</description>
    </item>
    
    <item>
      <title>github &amp; npm库</title>
      <link>https://my101du.github.io/1/01/github-npm%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/github-npm%E5%BA%93/</guid>
      <description>node &amp;amp; js ajv: The fastest JSON Schema Validator https://github.com/epoberezkin/ajv 需要 schema http://json-schema.org/draft/2019-09/json-schema-validation.html app-builder-bin https://www.npmjs.com/package/app-builder-bin app-module-path https://www.npmjs.com/package/app-module-path 允许将 node_moduels 外的目录纳入搜索 uuid async-mutex ?? 什么互斥？ https://www.npmjs.com/package/async-mutex base64 &amp;amp; base64 stream https://www.npmjs.com/package/base64-stream a streaming Base64 encoder and a streaming Base64 decoder chokidar An efficient wrapper around node.js fs.watch / fs.watchFile / FSEvents</description>
    </item>
    
    <item>
      <title>github pages 托管博客</title>
      <link>https://my101du.github.io/1/01/github-pages-%E6%89%98%E7%AE%A1%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/github-pages-%E6%89%98%E7%AE%A1%E5%8D%9A%E5%AE%A2/</guid>
      <description>github 的 pages 服务 https://pages.github.com/ 个人主页，或组织的主页 新建一个 repository 如 ironman.github.io 切换到 settings 往下滚动, 找到 Github Pages 选项, 将 Source 改为 master branch, 最后点击 Save 按钮 后面就是在本地修改、推送 git clone https://github.com/username/username.github.io git push</description>
    </item>
    
    <item>
      <title>go</title>
      <link>https://my101du.github.io/1/01/go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/go/</guid>
      <description>go slug: go-lang tags: other 下载 安装 下载二进制包安装后，需要设置环境变量（默认安装到 /usr/local/go 目录） 修改 .bash_profle export GOROOT=/usr/local/go/bin/ export PATH=$GOROOT:$PATH 然后使之生效source ~/.bash_profile 再添加 GOPATH(通过 go</description>
    </item>
    
    <item>
      <title>Google Analytics网站与移动应用分析工具</title>
      <link>https://my101du.github.io/1/01/google-analytics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/google-analytics/</guid>
      <description>最新更新 注册 获取统计代码 概览： Google Analytics报告解读 来自 https://yq.aliyun.com/wenji/14844 segment http://blog.sina.com.cn/s/blog_72ef7bea0102w2nv.html Segment类型 Segment代表会话子集或用户子集： 会话子集：例如，</description>
    </item>
    
    <item>
      <title>Google API 应用开发</title>
      <link>https://my101du.github.io/1/01/google-api-applications-develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/google-api-applications-develop/</guid>
      <description>可用的 API 包括调用 Google 的各种服务 https://console.developers.google.com/apis/library 注册 Application OAuth 认证得到 access_token 创建完应用后，与 Google API 的链接和通信都需要通过 OAuth 认证。 申请 OAuth Client ID 基本概念（web/javascr</description>
    </item>
    
    <item>
      <title>Guzzle——好用的PHP HTTP client</title>
      <link>https://my101du.github.io/1/01/guzzle%E5%A5%BD%E7%94%A8%E7%9A%84php-http-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/guzzle%E5%A5%BD%E7%94%A8%E7%9A%84php-http-client/</guid>
      <description>title: Guzzle——好用的PHP HTTP client 关于 https://github.com/guzzle/guzzle http://docs.guzzlephp.org/en/stable/ 安装 composer require guzzlehttp/guzzle 初步了解 普通方式请求 $client = new GuzzleHttp\Client(); $res = $client-&amp;gt;request(&#39;GET&#39;, &#39;https://api.github.com/user&#39;, [ &#39;auth&#39; =&amp;gt; [&#39;user&#39;, &#39;pass&#39;] ]); echo $res-&amp;gt;getStatusCode(); // &amp;quot;200&amp;quot; echo $res-&amp;gt;getHeader(&#39;content-type&#39;); // &#39;application/json; charset=utf8&#39; echo $res-&amp;gt;getBody(); // {&amp;quot;type&amp;quot;:&amp;quot;User&amp;quot;...&#39; 异步请求 use GuzzleHttp; use</description>
    </item>
    
    <item>
      <title>HTML页面DOM解析器-PHP Simple HTML DOM Parser</title>
      <link>https://my101du.github.io/1/01/php-simplehtmldom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/php-simplehtmldom/</guid>
      <description>[2018-11-30 放弃 simplehtmldom] 某天突然发现有问题， 例如一个字符串，只能得到第一个字母。 明明昨天还能得到的 child 内容，突然提示为 null(使用最新的包也不行) jQuer</description>
    </item>
    
    <item>
      <title>hugo 静态网站生成器</title>
      <link>https://my101du.github.io/1/01/hugo-%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/hugo-%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8/</guid>
      <description>https://emacsist.github.io/2018/04/26/%E4%BB%8Ehexo%E5%88%B0hugo/ 生成速度、兼容问题，迁移到 hugo 因为 Hexo 在处理 {{}}有问题，导致很多内容无法解析，而且想换个东西折腾。。。 Hugo 是 go 开发的 安装与初始化站点 # 安装 brew</description>
    </item>
    
    <item>
      <title>IDEA &amp; PHPStorm &amp; WebStorm使用</title>
      <link>https://my101du.github.io/1/01/intellij-ide-series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/intellij-ide-series/</guid>
      <description>特点： phpstorm 类的方法调用，在参数前面有个小小的 img controller 等提示，不用鼠标放上就能知道参数类型！ 有个独有的字体： fira code retina&amp;hellip;. 系统没有。 功能 在不同机器之间同步配</description>
    </item>
    
  </channel>
</rss>
