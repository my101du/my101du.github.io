<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>express on my101du Blog</title>
    <link>https://my101du.github.io/tags/express/</link>
    <description>Recent content in express on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/tags/express/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>最好懂的微信公众平台开发教程(6)-颠覆APP市场的微信小程序</title>
      <link>https://my101du.github.io/1/01/wechat-course-with-examples-chapter-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wechat-course-with-examples-chapter-6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>有了 Alfred, 你的 macOS 才能成为蝙蝠侠</title>
      <link>https://my101du.github.io/1/01/macos-alfred/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/macos-alfred/</guid>
      <description>Alfred https://awesomeopensource.com/projects/alfred-workflow vscode 直接打开“项目” https://github.com/kbshl/alfred-vscode (默认这个 project.json 的文件路径 ~/Library/Application\ Support/Code/User/有问题，要创建一个 alias 才能显示 ) 可以参考它的代码。 phpstorm/idea 使用 alfred</description>
    </item>
    
    <item>
      <title>服务器监控</title>
      <link>https://my101du.github.io/1/01/monitor-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/monitor-server/</guid>
      <description>本地 Nagios Zabbix？ 云服务 监控宝 无 Application(如PHP)监控 New Relic 收费？免费 OneAPM 收费了 主要是性能 听云 免费额度够 阿里云监控 国外 https://www.freehao123.com/mon-itor-us-jiankongbao/ https://www.rkdot.com/3-website-downtime-monitor/ https://blog.csdn.net/u012986057/article/details/50586703 https://uptimerobot.com/</description>
    </item>
    
    <item>
      <title>本地化</title>
      <link>https://my101du.github.io/1/01/%E6%9C%AC%E5%9C%B0%E5%8C%96/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%9C%AC%E5%9C%B0%E5%8C%96/</guid>
      <description>本地化 slug: laravel-localization tags: laravel 简介 语言包文件 语言包存放在 resources/lang 目录下的文件里 在此目录中应用支持的每一种语言都应该有一个单独的子目录 /resources /lang /en messages.php /es messages.php 例如 resources/lang/en/auth.php return [ &#39;failed&#39; =&amp;gt; &#39;These credentials</description>
    </item>
    
    <item>
      <title>查询构造器与分页</title>
      <link>https://my101du.github.io/1/01/%E6%9F%A5%E8%AF%A2%E6%9E%84%E9%80%A0%E5%99%A8%E4%B8%8E%E5%88%86%E9%A1%B5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%9F%A5%E8%AF%A2%E6%9E%84%E9%80%A0%E5%99%A8%E4%B8%8E%E5%88%86%E9%A1%B5/</guid>
      <description>查询构造器与分页 slug: laravel-query-builder-pagination tags: laravel 数据库连接 目前，Laravel 支持以下四种数据库系统： MySQL Postgres SQLite SQL Server Mongo DB 的支持可以使用这个项目 - laravel-mongodb 配置参数 环境变量中的配</description>
    </item>
    
    <item>
      <title>核心解读系列</title>
      <link>https://my101du.github.io/1/01/%E6%A0%B8%E5%BF%83%E8%A7%A3%E8%AF%BB%E7%B3%BB%E5%88%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A0%B8%E5%BF%83%E8%A7%A3%E8%AF%BB%E7%B3%BB%E5%88%97/</guid>
      <description>核心解读系列 https://segmentfault.com/a/1190000013324603 https://learninglaravel.net/</description>
    </item>
    
    <item>
      <title>案例分析</title>
      <link>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/</guid>
      <description>案例分析 【环保公益诉讼】行政观念进步 论点提炼：之前发生环境污染事件后，往往只是当地政府对企业进行罚款就结束了。但现在，远在北京的一家公益组织</description>
    </item>
    
    <item>
      <title>案例：api 驱动的 SPA 应用</title>
      <link>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8Bapi-%E9%A9%B1%E5%8A%A8%E7%9A%84-spa-%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8Bapi-%E9%A9%B1%E5%8A%A8%E7%9A%84-spa-%E5%BA%94%E7%94%A8/</guid>
      <description>案例：api 驱动的 SPA 应用 https://serversideup.net/laravel-gates-and-policies-in-an-api-driven-spa/ 完整的（vue） https://serversideup.net/courses/api-driven-development-laravel-vuejs/ 后端只提供 RestFul API ，前端用 react/vue/angular 等处理 antd ， element 等 认证 jwt https://medium.com/employbl/build-authentication-into-your-laravel-api-with-json-web-tokens-jwt-cd223ace8d1a 从客户端的角度设计后端的接口 资料：https://</description>
    </item>
    
    <item>
      <title>案例：ticket 系统（CRUD）</title>
      <link>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8Bticket-%E7%B3%BB%E7%BB%9Fcrud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8Bticket-%E7%B3%BB%E7%BB%9Fcrud/</guid>
      <description>案例：ticket 系统（CRUD） #参考 https://www.zhihu.com/question/20340360 SharePoint 的 ticket https://github.com/thekordy/ticketit 界面是 bootstrap 的，比较简单 https://github.com/BadChoice/handesk 一直在更新 https://www.faveohelpdesk.com/helpdesk/ 集成， api , mobile 教程 自己开发 https://www.youtube.com/watch?v=-Btui1On0s8 参考1 基于BPMN2.0的工单</description>
    </item>
    
    <item>
      <title>案例：workflow</title>
      <link>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8Bworkflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A1%88%E4%BE%8Bworkflow/</guid>
      <description>案例：workflow 开发 前面几个资料讲了 workflow 的组成部分，以及数据表设计、workflow、workflow nodes、ticket、tick</description>
    </item>
    
    <item>
      <title>模型</title>
      <link>https://my101du.github.io/1/01/%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A8%A1%E5%9E%8B/</guid>
      <description>模型 https://github.com/wgoto/react-axiom</description>
    </item>
    
    <item>
      <title>模拟数据</title>
      <link>https://my101du.github.io/1/01/mock-test-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mock-test-data/</guid>
      <description>Mock.js 生成模拟数据，拦截 ajax 请求 快速入门 安装 npm install mockjs 使用 var Mock = require(&#39;mockjs&#39;) var data = Mock.mock({ // 属性 list 的值是一个数组，其中含有 1 到 10 个元素 &#39;list|1-10&#39;: [{ // 属性 id 是一个自增数，起始值</description>
    </item>
    
    <item>
      <title>正则表达式教程</title>
      <link>https://my101du.github.io/1/01/study-regular-expression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/study-regular-expression/</guid>
      <description>技巧 匹配位于中间的字符 例如下面的行，需要找出类似hongkong.support@digikey.com 或 hongkong@digikey.</description>
    </item>
    
    <item>
      <title>油猴</title>
      <link>https://my101du.github.io/1/01/tampermonkey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/tampermonkey/</guid>
      <description>首先安装插件 （for chrome/safari/firefox 等） TamperMonkey 然后下载各种脚本 很多“源” https://tampermonkey.net/scripts.php 第一个倒闭了？ 我一般在这里下： https://greasyfork.org/en/scripts 最好找还在不断更新的。 如果不知道装哪个，有一个“自动</description>
    </item>
    
    <item>
      <title>测试</title>
      <link>https://my101du.github.io/1/01/%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%B5%8B%E8%AF%95/</guid>
      <description>测试 slug: laravel-test tags: laravel 背景 单元测试 单元测试是针对你代码中相对独立而且非常少的一部分代码来进行测试 （想想看，以前开发的时候，改一点代码，刷新一下界面；遇</description>
    </item>
    
    <item>
      <title>测试-mocha 与 chai</title>
      <link>https://my101du.github.io/1/01/test-mocha-chai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/test-mocha-chai/</guid>
      <description>mocha JavaScript测试框架，在浏览器和Node环境都可以使用，通过测试框架，可以为你的JavaScript代码添加相应的测试用例，使得项</description>
    </item>
    
    <item>
      <title>测试工具 Jest</title>
      <link>https://my101du.github.io/1/01/test-jest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/test-jest/</guid>
      <description>资料 https://www.jianshu.com/p/8b1301ff45fa 使用 Jest(基于 jasmine) 和 Enzyme Jest will automatically define NODE_ENV as test 安装 如果使用了creat-react-app脚手架来创建项目，已经包含了。 如果没有，则要安装库 yarn</description>
    </item>
    
    <item>
      <title>测试驱动开发</title>
      <link>https://my101du.github.io/1/01/%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/</guid>
      <description>测试驱动开发 这个案例开发一个TDD的应用（含验证,以及RESTAPI的CRUD，不需要打开postman） 安装新 laravel 应用并启用 auth composer create-project --prefer-dist laravel/laravel tdd-journey php artisan</description>
    </item>
    
    <item>
      <title>海底捞体验-观察-思考</title>
      <link>https://my101du.github.io/1/01/hai-di-lao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/hai-di-lao/</guid>
      <description>久闻海底捞火锅的大名，一直不能亲身前往体验，视为憾事。 直到公司组织聚餐，才终于有机会近距离观察一下《海底捞你学不会》里描述的一些细节。因为怕</description>
    </item>
    
    <item>
      <title>消息通知</title>
      <link>https://my101du.github.io/1/01/%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5/</guid>
      <description>消息通知 slug: laravel-notification tags: laravel 除了 发送邮件，Laravel 还支持通过多种频道发送通知，包括邮件、短信（通过 Nexmo）以及 Slack 。通知还能存到数据库，这样就能</description>
    </item>
    
  </channel>
</rss>
