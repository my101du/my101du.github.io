<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iMovie on my101du Blog</title>
    <link>https://my101du.github.io/tags/imovie/</link>
    <description>Recent content in iMovie on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/tags/imovie/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VSCode</title>
      <link>https://my101du.github.io/1/01/vscode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/vscode/</guid>
      <description>优势 开发 php 的时候，如果变量未使用过，则颜色比较浅。如果变量未定义也会明显提示； 变量和类的提示更智能一些 主题 亮色主题：https://vsco</description>
    </item>
    
    <item>
      <title>Vue2.x 教程</title>
      <link>https://my101du.github.io/1/01/vue-2-tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/vue-2-tutorial/</guid>
      <description>传统的页面中，数据刷新 双向绑定 安装 传统应用，在浏览器中引用（例如和以前的旧代码集成） &amp;lt;script src=&amp;quot;//vuejs.org/js/vue.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 使用 npm $ npm install vue Vue-Cli 创建一个单页应用模版 # install vue-cli $ npm install --global vue-cli</description>
    </item>
    
    <item>
      <title>w2ui</title>
      <link>https://my101du.github.io/1/01/w2ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/w2ui/</guid>
      <description>https://github.com/vitmalina/w2ui 基本demo http://w2ui.com/web/demo 更完整的 demo 列表(包括在工作中用到的 master/detail 双 grid， 行内编辑等) http://w2ui.com/web/demos/#!grid/grid-18 Layout Grid Toolbar Tree Tabs Popup Forms Fields Utilitis example 这里是个 Grid 的案例，非常容易理解， 定义表头（</description>
    </item>
    
    <item>
      <title>webide-在线编辑代码</title>
      <link>https://my101du.github.io/1/01/webide-%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/webide-%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E4%BB%A3%E7%A0%81/</guid>
      <description>code-server sudo docker run -it -p 127.0.0.1:8080:8080 -v &amp;quot;${HOME}/.local/share/code-server:/home/coder/.local/share/code-server&amp;quot; -v &amp;quot;$PWD:/home/coder/project&amp;quot; codercom/code-server:v2 docker 版有权限问题。。报错 docker: Error response from daemon: OCI runtime create failed: container_linux.go:346: starting container process caused &amp;ldquo;chdir to cwd (&amp;quot;/home/coder/project&amp;quot;) set in config.json failed: permission denied&amp;rdquo; : unknown. https://github.com/cdr/code-server/issues/459 提到解决方法 Fixed by manually create the folders /home/coder/project (无效) # 这个</description>
    </item>
    
    <item>
      <title>webpack 4</title>
      <link>https://my101du.github.io/1/01/webpack-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/webpack-4/</guid>
      <description>webpack 4 对比与 Parcel https://segmentfault.com/a/1190000014049700 parcel 更多自带的功能（例如热更新等） webpack 更加自定义，最新版编译速度更快？ Parcel 在开发项目时 发现问题： 我怎么禁用 hash 文件名?（特殊场景，直接</description>
    </item>
    
    <item>
      <title>webpack(3)教程</title>
      <link>https://my101du.github.io/1/01/webpack-study/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/webpack-study/</guid>
      <description>构建工具，grunt或者gulp 打包工具 webpack 他的目的就是把有依赖关系的各种文件打包成一系列的静态资源 开始 下载与安装(全局) npm install -g webpack 配置文件 webpack.config.js 这</description>
    </item>
    
    <item>
      <title>web服务器性能优化</title>
      <link>https://my101du.github.io/1/01/web-server-performance-optimize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/web-server-performance-optimize/</guid>
      <description>Nginx 的优化 配置nginx阻止cc攻击的ip 通过分析nginx的access日志看到，该攻击的访问没有 user-agent ，通过配置nginx if ($http_x_forwarded_for ~ 223.4.121.225) { return 403; } if (</description>
    </item>
    
    <item>
      <title>wii</title>
      <link>https://my101du.github.io/1/01/wii-play-and-enjoy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wii-play-and-enjoy/</guid>
      <description>SD卡/U盘与移动硬盘 首先格式化，一般FAT32 usb-loader 文件 下载“WII内核” ，找到 SD卡 FAT32 格式，解压放到根目录,其实就是包含了大量的封面文件\语</description>
    </item>
    
    <item>
      <title>windows bat批处理</title>
      <link>https://my101du.github.io/1/01/windows-bat%E6%89%B9%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/windows-bat%E6%89%B9%E5%A4%84%E7%90%86/</guid>
      <description>https://blog.csdn.net/gdp12315_gu/article/details/51322156</description>
    </item>
    
    <item>
      <title>Windows安装配置-工作环境搭建-使用技巧</title>
      <link>https://my101du.github.io/1/01/windows%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/windows%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>https://www.cnblogs.com/jadeboy/p/5517515.html Wox-&amp;gt;Listary Everything 类似 alfred 的快速启动 https://github.com/KELiON/cerebro https://www.listary.com/ Terminal 终端工具 （ssh 登录服务器） 自带的很不好用 cmder 有字符换行错乱问题 Git Bash 很美观，但是无法多tab Termius: 最漂亮，但是体积比较</description>
    </item>
    
    <item>
      <title>WooCommerce</title>
      <link>https://my101du.github.io/1/01/woocommerce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/woocommerce/</guid>
      <description>WooCommerce slug: wordpress-woocommerce tags: wordpress 首先安装商城插件 Woocommerce 略 “可变商品”实现一个产品多个“套餐组合” 使用产品的“属性”和“变量” 添加“属性” 首先在 “产品” 菜单的“属性”下</description>
    </item>
    
    <item>
      <title>WordPress Content and Media File Management</title>
      <link>https://my101du.github.io/1/01/wordpress-content-page-post-media/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-content-page-post-media/</guid>
      <description>&amp;lt;! - more -&amp;gt;
WordPress (hereinafter referred to as &amp;ldquo;WP&amp;rdquo;) content management, as well as some specific plug-in related operations.
Login login address Suppose you want to log in the WP site is www.sample.org, then the background is usually default login address is
www.sample.org/wp-admin
However, in order to improve the security of the system and prevent network hackers from using the scanner to burst passwords, the background address is usually changed to something else, for example</description>
    </item>
    
    <item>
      <title>Wordpress IP 地址判断</title>
      <link>https://my101du.github.io/1/01/wordpress-ip-address/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-ip-address/</guid>
      <description>使用服务 https://www.quora.com/What-is-the-best-API-for-geolocating-an-IP-address http://ipinfo.io/ 免费版限制每天调用 1000 次。可使用 jQuery 等 http://ipinfo.io/developers $curl ipinfo.io http://ip-api.com/ 每分钟150 次。。。 http://ip-api.com/docs/ db-ip.com //api.db-ip.com/addrinfo?api_key=&amp;amp;addr=Returns: { &amp;quot;address&amp;quot;: &amp;quot;116.12.250.1&amp;quot;, &amp;quot;country&amp;quot;: &amp;quot;SG&amp;quot;, &amp;quot;stateprov&amp;quot;: &amp;quot;Central Singapore&amp;quot;, &amp;quot;city&amp;quot;: &amp;quot;Singapore&amp;quot; } Limitations: 2,500 requests per hour Doesn&amp;rsquo;t support JSONP callbacks Requires IP address parameter Requires email address to get your</description>
    </item>
    
    <item>
      <title>Wordpress 基础-内容与媒体文件管理</title>
      <link>https://my101du.github.io/1/01/wordpress-content-page-post-media/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-content-page-post-media/</guid>
      <description>WordPress（以下简称 “WP”）的内容管理，以及一些特定的插件相关操作。 后台登录 登录地址 假设要登录的 WP 网站是 www.sample.org, 那么通常后台的默认登录地</description>
    </item>
    
    <item>
      <title>wordpress 的 The7 主题教程</title>
      <link>https://my101du.github.io/1/01/wordpress-the7-theme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-the7-theme/</guid>
      <description>修改默认的博客存档列表 https://guide.the7.io/user-guide/custom-post-types/blog/displaying-blog/ 默认是这样横着的方块 我们想要传统列表一样。需要新建一个页面，模板选“博客-列表” 后面可以通过这个地址访问 然后修改布局</description>
    </item>
    
    <item>
      <title>Wordpress 默认特性魔改</title>
      <link>https://my101du.github.io/1/01/wordpress-change-default-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-change-default-features/</guid>
      <description>“最近发布”大变样 最近有个需求，要求在“最近发布”列表里剔除某些文章类别，找到了这个插件 https://wordpress.org/plugins/recent-posts-widget-extended/#reviews 发现除了可以设置类别范围外，还可以自定样式、使用缩</description>
    </item>
    
    <item>
      <title>wordpress安全</title>
      <link>https://my101du.github.io/1/01/wordpress%E5%AE%89%E5%85%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress%E5%AE%89%E5%85%A8/</guid>
      <description>wordpress安全 permalin: wordpress-security tags: wordpress 服务器、用户、文件与目录 文件 上级目录 如 /home/wwwroot 属于 root chown www:www /home/wwwroot 修改整个 WP 目录为 web 服务器的用户 （nginx 、apache）</description>
    </item>
    
    <item>
      <title>Wordpress插件-内容编辑增强</title>
      <link>https://my101du.github.io/1/01/wordpress-plugins-content-edit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-plugins-content-edit/</guid>
      <description>Markdown wordpress.com 默认是支持 markdown 的。在后台的“设置”——“撰写”里面启用 但我们自己搭建的，要安装插件 （1）使用Jetpack插件支持Markdown，但是这</description>
    </item>
    
    <item>
      <title>wordpress插件开发</title>
      <link>https://my101du.github.io/1/01/wordpress-plugin-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-plugin-development/</guid>
      <description>入口文件 创建插件目录，规划文件结构 在wp-content/plugins/下创建目录my-plugin。 创建插件入口文件my-plugin.</description>
    </item>
    
    <item>
      <title>Wordpress权限设置</title>
      <link>https://my101du.github.io/1/01/wordpress-permission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/wordpress-permission/</guid>
      <description>CMS 权限分配给其他BU的工作人员 研究过很多关于“page”， “category”的权限设置插件，都不太理想无法满足需求，并且比较复杂（例如 Press Permit</description>
    </item>
    
  </channel>
</rss>
