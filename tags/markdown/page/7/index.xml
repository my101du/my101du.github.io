<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>markdown on my101du Blog</title>
    <link>https://my101du.github.io/tags/markdown/</link>
    <description>Recent content in markdown on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>markdown 库</title>
      <link>https://my101du.github.io/1/01/markdown-%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/markdown-%E5%BA%93/</guid>
      <description>markdown 库 搜关键词 https://www.npmjs.com/search?q=markdown https://www.npmjs.com/package/remark https://remark.js.org/ 很多解析库都基于此。 remark 是 unified的创建，专门处理 markdown,其他插件还有处理 html、text 的 https://unified.js.org/#guides （unifi</description>
    </item>
    
    <item>
      <title>markdown 转 json</title>
      <link>https://my101du.github.io/1/01/markdown-%E8%BD%AC-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/markdown-%E8%BD%AC-json/</guid>
      <description>markdown 转 json 事情是这样的。领导要求把之前一个 html 页面里的类似下面结构里，每个省里增加一条记录 &amp;lt;h2&amp;gt;省份1&amp;lt;/h2&amp;gt; &amp;lt;</description>
    </item>
    
    <item>
      <title>meteor-react-layout与flow-router学习</title>
      <link>https://my101du.github.io/1/01/meteor-react-layout-and-flow-router-study/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/meteor-react-layout-and-flow-router-study/</guid>
      <description>这是 Meteor 结合 React 的开发相关知识。 有道是“师傅领进门，修行在个人”。虽然这些资料都是经过了精挑细选的，可以避免我少走弯路。但作为一个之前大部分时间</description>
    </item>
    
    <item>
      <title>meteor教程</title>
      <link>https://my101du.github.io/1/01/meteor-study/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/meteor-study/</guid>
      <description>我之前的主要工作是偏向于后端的 PHP+MySQL 开发，对“前端”的理解比较肤浅，以为仅仅是“组织和表现数据，并兼容不同的设备界面”。在熟练使用 jQuery、</description>
    </item>
    
    <item>
      <title>Migration 迁移</title>
      <link>https://my101du.github.io/1/01/migration-%E8%BF%81%E7%A7%BB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/migration-%E8%BF%81%E7%A7%BB/</guid>
      <description>Migration 迁移 数据库迁移就像是数据库的版本控制，可以让你的团队轻松修改并共享应用程序的数据库结构 可以很方便地创建新数据表、修改数据表结构和字段，而不</description>
    </item>
    
    <item>
      <title>mindmap 库</title>
      <link>https://my101du.github.io/1/01/mindmap-%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mindmap-%E5%BA%93/</guid>
      <description>mindmap 库 免费 jsmind 简单易用，但是很多问题作者无法解决。。。如导出等 antd 里使用 修改1. 需要手动设置.jsmind-inner的高度为 min-height 500px 修改2. 需要设置</description>
    </item>
    
    <item>
      <title>mobx</title>
      <link>https://my101du.github.io/1/01/mobx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mobx/</guid>
      <description>mobx slug: mobx-and-react tags: foreground 安装 安装 npm install -save mobx mobx-react 样板工程 https://github.com/mobxjs/mobx-react-boilerplate 入门 装饰器？ https://aotu.io/notes/2016/10/24/decorator/index.html 概念与原则 State(状态) 状态 是驱动应用的数据。 通常有像待办事项列表这样的领域特定状态</description>
    </item>
    
    <item>
      <title>Mocha测试框架</title>
      <link>https://my101du.github.io/1/01/mocha-test-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mocha-test-framework/</guid>
      <description>干啥的 安装 断言</description>
    </item>
    
    <item>
      <title>moment 时间处理库</title>
      <link>https://my101du.github.io/1/01/momonent-timezone-library/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/momonent-timezone-library/</guid>
      <description>timezone timezone var dateTimeZone = moment(originDate).tz(&amp;quot;America/Los_Angeles&amp;quot;).format(&amp;quot;YYYY-MM-DDTHH:mm:ss&amp;quot;); utc var dateTimeZone = moment(originDate).utc().format(&amp;quot;YYYY-MM-DDTHH:mm:ss&amp;quot;);</description>
    </item>
    
    <item>
      <title>mongodb 学习</title>
      <link>https://my101du.github.io/1/01/mongodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mongodb/</guid>
      <description>安装 以 CentOS 为例 https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/</description>
    </item>
    
    <item>
      <title>mweb</title>
      <link>https://my101du.github.io/1/01/mweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mweb/</guid>
      <description>mweb 浮动大纲改成固定 真隐蔽。。。</description>
    </item>
    
    <item>
      <title>MySQL教程与技巧</title>
      <link>https://my101du.github.io/1/01/mysql%E6%95%99%E7%A8%8B%E4%B8%8E%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mysql%E6%95%99%E7%A8%8B%E4%B8%8E%E6%8A%80%E5%B7%A7/</guid>
      <description>permalink: mysql-study-and-skill 在 CentOS 7 下安装 安装服务 &amp;amp; 启动 # MariaDB sudo yum install mariadb-server mariadb sudo systemctl start mariadb # MySQL wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm yum update sudo yum install mysql-server # 查看默认生成的root密码，后面用到 sudo grep &#39;temporary password&#39; /var/log/mysqld.log 后面就一样的</description>
    </item>
    
    <item>
      <title>NAS 网络存储</title>
      <link>https://my101du.github.io/1/01/nas-network-storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/nas-network-storage/</guid>
      <description>第三方源 之前安装 Git Server，想使用容器方案。 因为是低端设备，安装 Container 后发现经常服务中断，（打开 Container 管理器僵死，在浏览器工具里看到 503 错误），需</description>
    </item>
    
    <item>
      <title>Nginx安装与配置</title>
      <link>https://my101du.github.io/1/01/nginx-install-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/nginx-install-config/</guid>
      <description>安装 CentOS 7 yum 方式安装（不推荐，在安装扩展的时候不太方便） sudo yum install epel-release sudo yum install nginx 编译源码 yum install -y gcc # 支持 rewrite yum install -y pcre-devel # 支持 gzip yum install zlib zlib-devel -y # 支持 ssl yum install openssl openssl-devel -y #</description>
    </item>
    
    <item>
      <title>Nginx搭建流媒体服务器</title>
      <link>https://my101du.github.io/1/01/nginx%E6%90%AD%E5%BB%BA%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/nginx%E6%90%AD%E5%BB%BA%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>nginx搭建mp4、flv流媒体服务器 需要用到的源码包有 nginx-1.3.8.tar.gz(http://nginx.org/download/nginx-1.3.8.tar.gz) pcre-8.12.tar.gz(ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.12.tar.gz) nginx_mod_h264_streaming-2.2.7.tar.gz(h</description>
    </item>
    
    <item>
      <title>node 库列表</title>
      <link>https://my101du.github.io/1/01/node-packages-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/node-packages-list/</guid>
      <description>常用全局库（一些工具等） esformmater (React 基础库）react, react-dom, prop-types (React 路由) react-router,react-router-dom 脚手架 &amp;amp; 框架 umi https://github.com/umijs/umi 类 Next.js 的 React 应用框架 classnames (为 Promise 添加 finally) promise.prototype.finally (时间库) moment ,或者简化的 day (工</description>
    </item>
    
    <item>
      <title>Node 程序的文件变动监控与自动重启</title>
      <link>https://my101du.github.io/1/01/node-file-monitor-auto-reboot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/node-file-monitor-auto-reboot/</guid>
      <description>通常情况用 node 命令来启动 $node index.js 或者可以放入后台运行，并且不受终端退出的影响 nohup node app.js &amp;gt; /foo/log.txt 2&amp;gt;&amp;amp;1 &amp;amp; 使用 forever 来启动一个守护进程，当node崩溃的时候自动重启 $npm</description>
    </item>
    
    <item>
      <title>nodejs快速入门</title>
      <link>https://my101du.github.io/1/01/nodejs-study/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/nodejs-study/</guid>
      <description>Node.js是一个Javascript运行环境(runtime)。实际上它是对Google V8引擎进行了封装。V8引 擎执行Javascri</description>
    </item>
    
    <item>
      <title>node操作数据库</title>
      <link>https://my101du.github.io/1/01/node-and-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/node-and-database/</guid>
      <description>MySQL 除了一个很简陋的 node-mysql 用 Sequelize (http://docs.sequelizejs.com) https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001471955049232be7492e76f514d45a2180e2c224eb7a6000</description>
    </item>
    
    <item>
      <title>OAuth2 &amp; jwt</title>
      <link>https://my101du.github.io/1/01/oauth2-jwt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/oauth2-jwt/</guid>
      <description>OAuth2 &amp;amp; jwt Laravel 的 guards &amp;amp; providers 以及 OAuth2 &amp;amp; Jwt guards &amp;amp; providers Laravel 的“身份验证”包括 guards和providers两部分，相关的配置信息在config/auth.php文</description>
    </item>
    
  </channel>
</rss>
