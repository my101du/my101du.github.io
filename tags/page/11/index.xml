<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tags on my101du Blog</title>
    <link>http://blog.zhishibee.com/tags/</link>
    <description>Recent content in Tags on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="http://blog.zhishibee.com/tags/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%8F%90%E9%AB%98-laravel-%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%8F%90%E9%AB%98-laravel-%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87/</guid>
      <description>title: 提高 Laravel 项目开发效率 permalink: improve-dev-speed-of-laravel-project tags: laravel 使用 Clockwork 监测性能问题 利用 chrome 的一个 tab 来查看 https://underground.works/clockwork/ https://chrome.google.com/webstore/detail/clockwork/dmggabnehkmmfmdffgajcflpdjlnoemp 类似 chrome 的 time , 可以列出 路由、sql 等消耗的时间 https://learnku.com/laravel/t/23/use-clockwork-to-debug-laravel-app Laravel Debugbar 这个会插入额外 HTML 代码</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/</guid>
      <description>测试驱动开发 这个案例开发一个TDD的应用（含验证,以及RESTAPI的CRUD，不需要打开postman） 安装新 laravel 应用并启用 auth composer create-project --prefer-dist laravel/laravel tdd-journey php artisan</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%8A%80%E5%B7%A7%E4%B8%8E%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%8A%80%E5%B7%A7%E4%B8%8E%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;p&gt;技巧与问题记录&lt;/p&gt;
&lt;p&gt;permalink: laravel-skills-questions
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;laravel&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%A0%B8%E5%BF%83%E8%A7%A3%E8%AF%BB%E7%B3%BB%E5%88%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%A0%B8%E5%BF%83%E8%A7%A3%E8%AF%BB%E7%B3%BB%E5%88%97/</guid>
      <description>核心解读系列 https://segmentfault.com/a/1190000013324603 https://learninglaravel.net/</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/shop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/shop/</guid>
      <description>电商案例 来自 Learnku 的购买教程 前言 结构 用户中心； 收货地址； 电商管理后台； 权限管理； 商品管理； 商品 SKU； 购物车模块； 订单模块； 支付模块（支付宝、微</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%A1%88%E4%BE%8Bapi-%E9%A9%B1%E5%8A%A8%E7%9A%84-spa-%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%A1%88%E4%BE%8Bapi-%E9%A9%B1%E5%8A%A8%E7%9A%84-spa-%E5%BA%94%E7%94%A8/</guid>
      <description>案例：api 驱动的 SPA 应用 https://serversideup.net/laravel-gates-and-policies-in-an-api-driven-spa/ 完整的（vue） https://serversideup.net/courses/api-driven-development-laravel-vuejs/ 后端只提供 RestFul API ，前端用 react/vue/angular 等处理 antd ， element 等 认证 jwt https://medium.com/employbl/build-authentication-into-your-laravel-api-with-json-web-tokens-jwt-cd223ace8d1a 从客户端的角度设计后端的接口 资料：https://</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%A1%88%E4%BE%8Bticket-%E7%B3%BB%E7%BB%9Fcrud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%A1%88%E4%BE%8Bticket-%E7%B3%BB%E7%BB%9Fcrud/</guid>
      <description>案例：ticket 系统（CRUD） #参考 https://www.zhihu.com/question/20340360 SharePoint 的 ticket https://github.com/thekordy/ticketit 界面是 bootstrap 的，比较简单 https://github.com/BadChoice/handesk 一直在更新 https://www.faveohelpdesk.com/helpdesk/ 集成， api , mobile 教程 自己开发 https://www.youtube.com/watch?v=-Btui1On0s8 参考1 基于BPMN2.0的工单</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E6%A1%88%E4%BE%8Bworkflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E6%A1%88%E4%BE%8Bworkflow/</guid>
      <description>案例：workflow 开发 前面几个资料讲了 workflow 的组成部分，以及数据表设计、workflow、workflow nodes、ticket、tick</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/%E8%B5%84%E6%96%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/%E8%B5%84%E6%96%99/</guid>
      <description>资料 项目学习 https://www.zhihu.com/question/22969129 项目 Snipe-IT 基于 Laravel 的 IT资产管理系统 https://snipe-it.readme.io/docs https://snipeitapp.com/ 100个扩展 https://laravel-china.org/topics/2530/the-highest-amount-of-downloads-of-the-100-laravel-extensions-recommended</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/php-%E4%B8%8E-memcached-%E7%BC%93%E5%AD%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/php-%E4%B8%8E-memcached-%E7%BC%93%E5%AD%98/</guid>
      <description>title: PHP 与 Memcached 缓存 permalink: php-and-memcached tags: php 安装 Memcached 系统服务与启动 mac $brew install memcached $which memcached /usr/local/bin/memcached # 手动启动服务 $/usr/local/bin/memcached -d # 开机启动 Linux 安装 PHP 扩展 首先运行 phpinfo()。 如果没有搜到mem</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/php-%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/php-%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;title: PHP 开发中常见的一些问题
permalink: php-common-issus
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/phpunit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/phpunit/</guid>
      <description>quick start https://phpunit.de/getting-started/phpunit-8.html document https://phpunit.readthedocs.io/en/8.4/ 注意版本 例如 PHPUnit8 只支持 PHP7.2及以上版本 安装与执行 全局有效， 直接下载 phar 包 wget -O phpunit https://phar.phpunit.de/phpunit-8.phar # 全局 放入环境变量 mv phpunit /usr/local/bin/ chmod +x /usr/local/bin/phpunit # 运行后显示版本表</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/php%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/php%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>title: PHP快速入门 permalink: php-basic tags: php PHP（外文名:PHP: Hypertext Preprocessor，中文名：“超文本预处理器”）是一种通用开源脚本语言。语法吸收了C</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/php%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/php%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8/</guid>
      <description>&lt;p&gt;title: PHP网站安全
permalink: php-site-security
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/php%E8%B0%83%E7%94%A8%E4%BA%92%E8%81%94%E7%BD%91api%E6%9C%8D%E5%8A%A1%E6%9F%A5%E5%BF%AB%E9%80%92%E4%B8%8E%E4%BC%81%E4%B8%9A%E6%A0%B8%E5%90%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/php%E8%B0%83%E7%94%A8%E4%BA%92%E8%81%94%E7%BD%91api%E6%9C%8D%E5%8A%A1%E6%9F%A5%E5%BF%AB%E9%80%92%E4%B8%8E%E4%BC%81%E4%B8%9A%E6%A0%B8%E5%90%8D/</guid>
      <description>title: PHP调用互联网API服务——查快递与企业核名 permalink: php-examples-juhe-shuju tags: php 使用 crontab 计划任务结合 curl 命令定时访问 注意在某些测试环境下一定要指定 -A 参数，发送一个 User-Agent 才能</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/php%E8%BD%BB%E8%AE%BA%E5%9D%9B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/php%E8%BD%BB%E8%AE%BA%E5%9D%9B/</guid>
      <description>title: PHP轻论坛 permalink: lightweight-php-forum tags: php Flarum http://flarum.org/docs http://flarum.org.cn/docs/</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/php%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E6%8E%A2%E8%AE%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/php%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E6%8E%A2%E8%AE%A8/</guid>
      <description>&lt;p&gt;title: PHP高级特性探讨
permalink: php-advanced-feature
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/psr-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/psr-7/</guid>
      <description>PSR-7 https://www.php-fig.org/psr/psr-7/</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/slim-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/slim-framework/</guid>
      <description>官网 安装slim 以及依赖 composer require slim/slim &amp;quot;^3.0&amp;quot; 使用 在 index.php 文件中 require &#39;vendor/autoload.php&#39;; $app = new Slim\App(); $app-&amp;gt;get(&#39;/hello/{name}&#39;, function ($request, $response, $args) { return $response-&amp;gt;getBody()-&amp;gt;write(&amp;quot;Hello, &amp;quot; . $args[&#39;name&#39;]); }); $app-&amp;gt;run(); 使用 php 内置 web 服务快速启动 php -S localhost:8000 测试 $ phpunit</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog.zhishibee.com/1/01/thinkphp3.2.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.zhishibee.com/1/01/thinkphp3.2.3/</guid>
      <description>gitignore 忽略缓存、日志等目录 .idea *.log */Runtime/ Public/uploads *.log 主要是 /Runtime/Logs 里的文件 */Runtime/ 还把 Cache 目录也排除了。 用 ** 开头是因为可能会把默认的 Application 目录改名 Public/upload 是上传过来的文件 thinkphp 多个模块 Home Admin</description>
    </item>
    
  </channel>
</rss>
