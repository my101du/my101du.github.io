<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tags on my101du Blog</title>
    <link>https://my101du.github.io/tags/</link>
    <description>Recent content in Tags on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/tags/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/redux-%E5%B0%81%E8%A3%85%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/redux-%E5%B0%81%E8%A3%85%E5%BA%93/</guid>
      <description>Redux 封装库 Redux 的 reducer action 等繁琐的写法，催生了一些封装 redux 的库. 例如一些思路就是“model&amp;rdquo; redux saga https://github.com/redux-saga/redux-saga An alternative side effect model for Redux apps 比较复杂。。。 和 thunkMiddle 的关系</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/roadhog-%E5%BF%AB%E9%80%9F%E4%B8%94%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84react%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/roadhog-%E5%BF%AB%E9%80%9F%E4%B8%94%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84react%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%B7%A5%E5%85%B7/</guid>
      <description>title: roadhog 快速且功能强大的react项目搭建工具 permalink: react-roadhog tags: foreground 官方说明是 Cli tool for creating react apps, configurable version of create-react-app</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/vue2.x-%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/vue2.x-%E6%95%99%E7%A8%8B/</guid>
      <description>title: Vue2.x 教程 permalink: vue-2-tutorial date: 2017/07/01 10:10:10 tags: vue 传统的页面中，数据刷新 双向绑定 安装 传统应用，在浏览器中引用（例如和以前的旧代码集成） &amp;lt;script src=&amp;quot;//vuejs.org/js/vue.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 使用 npm $ npm install vue Vue-Cli 创建一个单页应</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A8%A1%E5%9E%8B/</guid>
      <description>模型 https://github.com/wgoto/react-axiom</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/serverless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/serverless/</guid>
      <description>title: serverless permalink: serverless tags: frontend 基础 https://github.com/serverless/serverless serverless-offline https://github.com/dherault/serverless-offline 资料 https://www.jianshu.com/p/51a19ef5f8cf</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/parceljs-%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/parceljs-%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B7/</guid>
      <description>title: parceljs 打包工具 permalink: parceljs tags: frontend https://parceljs.org/getting_started.html https://www.zhihu.com/question/263676981 打包工具与构建工具的区别（简单-&amp;gt;更多功能） 厌倦了 webpack 的繁琐，还有莫名其妙突然 webpack-dev-server 性能变低 快速开始 npm install -g parcel-bundler 你正在使</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/rest-api-%E8%A7%84%E8%8C%83%E4%B8%8E%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/rest-api-%E8%A7%84%E8%8C%83%E4%B8%8E%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90/</guid>
      <description>REST API 规范与文档生成 基本 设计 从客户端的角度设计后端接口 https://www.jianshu.com/p/a3828971a59f 合并 API 请求 &amp;amp; 独立多个 API https://segmentfault.com/a/1190000015665465 (测试加载时间对比) 注意：测试都是用“干净”的无缓存情况下测试</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/umi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/umi/</guid>
      <description>title: umi permalink: umi tags: frontend umi + dva 快速上手 # 安装 npm i -g umi umi -v # 新建项目（暂时无脚手架） mkdir myapp cd myapp # 新建首页（文件即路由） mkdir pages echo &#39;export default () =&amp;gt; &amp;lt;div&amp;gt;Index Page&amp;lt;/div&amp;gt;&#39; &amp;gt; pages/index.js # 启动 dev 服务器 umi</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/webpack-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/webpack-4/</guid>
      <description>webpack 4 对比与 Parcel https://segmentfault.com/a/1190000014049700 parcel 更多自带的功能（例如热更新等） webpack 更加自定义，最新版编译速度更快？ Parcel 在开发项目时 发现问题： 我怎么禁用 hash 文件名?（特殊场景，直接</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/webpack3%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/webpack3%E6%95%99%E7%A8%8B/</guid>
      <description>title: webpack(3)教程 permalink: webpack-study tags: webpack 前端 构建工具，grunt或者gulp 打包工具 webpack 他的目的就是把有依赖关系的各种文件打包成一系列的静态资源 开始</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E5%88%87%E5%9B%BE%E4%B8%8E%E5%B0%BA%E5%AF%B8%E6%A0%87%E6%B3%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E5%88%87%E5%9B%BE%E4%B8%8E%E5%B0%BA%E5%AF%B8%E6%A0%87%E6%B3%A8/</guid>
      <description>切图与尺寸标注 https://juejin.im/entry/58ee01f85c497d0062d0471e 很多同类产品对比 https://imweb.io/topic/56d6795cca5e865230c1d4f8 ps 的css 生成（当然会有冗余） https://blog.yayuanzi.com/3254.html https://www.zhihu.com/question/60352831 切图(导出图层) Cutterman(先在官网注册) 导入 PSD, 选择图层，一次把</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF_%E5%85%A8%E6%A0%88%E5%9F%BA%E6%9C%AC%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF_%E5%85%A8%E6%A0%88%E5%9F%BA%E6%9C%AC%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</guid>
      <description>title: 前端_全栈基本面试问题 permalink: frontend-fullstack-questions tags: frontend 注意：这些不是难度非常大的面试题（一般公司也不会有非常高的要求，足够就好），另外现在有一些培训班会背题，因此</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/</guid>
      <description>title: 前端开发技巧 permalink: skills-of-frontend tags: 前端 自动为 js 和 css 添加版本号(以 Wordpress 为例) 如果 Nginx/Apache 服务器上设置的静态文件过期时间很大，那么在开发时，频繁更改文件而浏览器不加载</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%BE%85%E5%8A%A9%E5%BA%93%E4%B8%8E%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%BE%85%E5%8A%A9%E5%BA%93%E4%B8%8E%E5%B7%A5%E5%85%B7/</guid>
      <description>title: 前端开发辅助库与工具 permalink: frontend-dev-help-library-tool tags: frontend 文本&amp;amp;代码有关 CodeMirror 在线代码编辑 https://codemirror.net/ 代码高亮 react ：react-syntax-highlighter 通用：htt</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
      <description>title: 前端性能优化 permalink: frontend-performance-optimize tags: 前端 如果是存放在样式、程序HTML里的图片，建议加版本号，版本号通过上线发布系统或者配置文件统一控制，每次上线操作自动更</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0/</guid>
      <description>title: 自动刷新 permalink: auto-refresh tags: 前端 Gulp.js-livereload 不用F5了，实时自动刷新页面来开发 正如上图所示，使用 gulp-livereload，可以实时保存刷新，那样就不用按F5</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/couchdb-%E5%92%8C-pouchdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/couchdb-%E5%92%8C-pouchdb/</guid>
      <description>CouchDB 和 PouchDB CouchDB 是一个 NoSQL, 有很多的优势，例如跨地区同步，自带 RESTFul API 等。 而 PouchDB 是一个 JavaScript 的实现，可以在本地访问数据库。比 SQLite3 性能要好，而且 JSON 类型的数据便于开发。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/indexeddb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/indexeddb/</guid>
      <description>title: IndexedDB permalink: indexeddb tags: frontend IndexedDB IndexedDB: 浏览器端文档数据库。 使用lndexedDB，你可以像在服务器端数据库几乎相同的方式创建、读取、更新和删除大量的记录。 一般来说</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/</guid>
      <description>title: 模拟数据 permalink: mock-test-data tags: frontend Mock.js 生成模拟数据，拦截 ajax 请求 快速入门 安装 npm install mockjs 使用 var Mock = require(&#39;mockjs&#39;) var data = Mock.mock({ // 属性 list 的值是一个数组，其中含有 1 到 10 个元素 &#39;list|1-10&#39;: [{ // 属性 id 是</description>
    </item>
    
    <item>
      <title></title>
      <link>https://my101du.github.io/1/01/mocha%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mocha%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</guid>
      <description>title: Mocha测试框架 permalink: mocha-test-framework tags: javascript 干啥的 安装 断言</description>
    </item>
    
  </channel>
</rss>
