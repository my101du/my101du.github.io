<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>supervisor on my101du Blog</title>
    <link>https://my101du.github.io/tags/supervisor/</link>
    <description>Recent content in supervisor on my101du Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://my101du.github.io/tags/supervisor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>laravel 菜单</title>
      <link>https://my101du.github.io/1/01/laravel-menu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-menu/</guid>
      <description></description>
    </item>
    
    <item>
      <title>laravel-admin 基础，表格</title>
      <link>https://my101du.github.io/1/01/laravel-admin-%E5%9F%BA%E7%A1%80%E8%A1%A8%E6%A0%BC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-admin-%E5%9F%BA%E7%A1%80%E8%A1%A8%E6%A0%BC/</guid>
      <description>laravel-admin 基础，表格 后台系统大部分都是增删改查，要一个个去创建 controller， views 太麻烦了。如果能够几行命令根据 model 自动生成代码就好了 https://github.com/z-song/laravel-admin 内置用户和</description>
    </item>
    
    <item>
      <title>laravel-admin 更多</title>
      <link>https://my101du.github.io/1/01/laravel-admin-%E6%9B%B4%E5%A4%9A/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-admin-%E6%9B%B4%E5%A4%9A/</guid>
      <description>laravel-admin 更多 https://laravel-admin.org/posts https://discuss.laravel-admin.org/ 扩展开发 暂时略 在开发之前，先看看是不是已经有了，不要重复造轮子。 https://laravel-admin.org/extensions 控制台命令 # 显示当前版本和所有命令 php artisan admin # 安装和卸载larave</description>
    </item>
    
    <item>
      <title>laravel-admin 表单,模型，前端组件，RBAC权限</title>
      <link>https://my101du.github.io/1/01/laravel-admin-%E8%A1%A8%E5%8D%95%E6%A8%A1%E5%9E%8B%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6rbac%E6%9D%83%E9%99%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-admin-%E8%A1%A8%E5%8D%95%E6%A8%A1%E5%9E%8B%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6rbac%E6%9D%83%E9%99%90/</guid>
      <description>laravel-admin 表单,模型，前端组件，RBAC权限 表单 （基于数据模型） 基本使用 Encore\Admin\Form类用于生成基于数据模型的表单。 还是以 movies 表和</description>
    </item>
    
    <item>
      <title>laravel-debugger</title>
      <link>https://my101du.github.io/1/01/laravel-debugger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/laravel-debugger/</guid>
      <description>下载地址 https://github.com/barryvdh/laravel-debugbar</description>
    </item>
    
    <item>
      <title>LeanCloud云服务</title>
      <link>https://my101du.github.io/1/01/leancloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/leancloud/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://my101du.github.io/1/01/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/linux/</guid>
      <description>Linux install &amp;amp; start up https://likegeeks.com/linux-ldap-server/ yum -y install openldap openldap-servers openldap-clients systemctl enable slapd config make a password for the admin user ldappassword Windows Server Add Role Develop SSL 方式连接 LDAP https://www.novell.com/coolsolutions/tip/5838.html 首先在 AD 服务器上生成证书(.cer 文件)，复制过来。 然后在代码部署机</description>
    </item>
    
    <item>
      <title>Linux安装与配置（CentOS）</title>
      <link>https://my101du.github.io/1/01/linux-install-settings-centos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/linux-install-settings-centos/</guid>
      <description>学习 Linux，从最基础的安装和配置开始 下载 从中国镜像。 例如 阿里巴巴 的 https://www.centos.org/download/mirrors/ http://mirrors.aliyun.com/centos/ http://mirrors.aliyun.com/centos/7.7.1908/isos/x86_64/ 注意下载 minimal 版本。 netinstall 版本在后面安装时一直选择 source 失败(1)cdrom</description>
    </item>
    
    <item>
      <title>Linux常用命令与一些技巧</title>
      <link>https://my101du.github.io/1/01/linux-command-and-skill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/linux-command-and-skill/</guid>
      <description>Linux 的精髓就在于命令行操作。指尖如飞，心随所动。 更好用的终端 安装 zsh 与 on-my-zsh yum -y install zsh zsh-completions sh -c &amp;quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;quot; # 正常情况下，自动修改了 shell 为 zsh 无需运行切换命令和重新</description>
    </item>
    
    <item>
      <title>lodash</title>
      <link>https://my101du.github.io/1/01/lodash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/lodash/</guid>
      <description>lodash npm i -s lodash 加载（或只加载需要的部分） // Load the full build. var _ = require(&#39;lodash&#39;); // Load the core build. var _ = require(&#39;lodash/core&#39;); // Load the FP build for immutable auto-curried iteratee-first data-last methods. var fp = require(&#39;lodash/fp&#39;); // Load method categories. var array = require(&#39;lodash/array&#39;); var object = require(&#39;lodash/fp/object&#39;); // Cherry-pick methods for smaller browserify/rollup/webpack bundles.</description>
    </item>
    
    <item>
      <title>Lodash与underscore.md</title>
      <link>https://my101du.github.io/1/01/lodash-underscore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/lodash-underscore/</guid>
      <description>Loadash与underscore.md</description>
    </item>
    
    <item>
      <title>ltworkflow</title>
      <link>https://my101du.github.io/1/01/ltworkflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/ltworkflow/</guid>
      <description>ltworkflow 参考java开源工作流引擎osworkflow xml配置流程节点 -&amp;gt; PHP解析XML并在数据库中记录操作状态 概念 组织结构 审批 元素 审批条件 审批</description>
    </item>
    
    <item>
      <title>Lumen</title>
      <link>https://my101du.github.io/1/01/lumen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/lumen/</guid>
      <description>Lumen slug: lumen tags: php lumen laravel 更新 一个测试 https://medium.com/@laurencei/lumen-vs-laravel-performance-in-2018-1a9346428c01 现在 lumen 对 Laravel 的 api route 没有太多性能优势。 创建一个 Lumen 项目 使用 composer 命令创建 Lumen 项目 # 最新版 composer create-project laravel/lumen --prefer-dist api.myproject.com # 指定一个旧版本 composer create-project laravel/lumen old_lumen &amp;quot;5.5.*&amp;quot;</description>
    </item>
    
    <item>
      <title>mac 使用技巧</title>
      <link>https://my101du.github.io/1/01/mac-skills/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mac-skills/</guid>
      <description>2k 与 4k 的缩放 https://www.zhihu.com/question/35300978 总结：p2415q （4k），开成1920*1080p非常好用，我凑近来看不见锯齿。完全不是2k可比拟。 大家就别折腾了。没钱4k</description>
    </item>
    
    <item>
      <title>Mac 系统崩溃</title>
      <link>https://my101du.github.io/1/01/mac-%E7%B3%BB%E7%BB%9F%E5%B4%A9%E6%BA%83/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/mac-%E7%B3%BB%E7%BB%9F%E5%B4%A9%E6%BA%83/</guid>
      <description>Mac 系统崩溃 前情 操作系统使用情况： 最开始在一台 rmbp 2014 年 early 版上运行 10.10，一路持续跟着升级到 10.13，很正常; 去年使用“迁移助手”，把系统从</description>
    </item>
    
    <item>
      <title>macbook pro</title>
      <link>https://my101du.github.io/1/01/macbook-pro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/macbook-pro/</guid>
      <description>外接显示器 2015 之前版本不支持 4k 跑到 60Hz 问题 https://kandrejevs.com/blog/read/50/More-than-30Hz-on-Your-133-Macbook-Pro-and-4K-monitor 能跑到 52Hz 可以用 swtichResX 添加 Custom resolutions 设置 Pixel Clock 为 450,00 MHz 彻底关闭自带的显示器 亮度大法 外接后，把笔记本的显示器亮度降到最</description>
    </item>
    
    <item>
      <title>macOS 下的系统清理软件</title>
      <link>https://my101du.github.io/1/01/macos-system-cleaner-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/macos-system-cleaner-tools/</guid>
      <description>CleanMyMac (总体而言最强大，暂时无法替代) Dr.Cleaner () 免费版无法删除app AppCleaner 最新版无法删除一些文件 OmniDiskSweeper 分析每个目录下的磁盘占用 删除不必要的 自带清理命令. yarn cache clean</description>
    </item>
    
    <item>
      <title>macOS基本使用与高效工作</title>
      <link>https://my101du.github.io/1/01/os-x-skills/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/os-x-skills/</guid>
      <description>一般情况下，Mac OS 的升级、在新旧机器之间迁移数据是比较平滑的，不会出现问题，可以完整地保持上一个版本的所有用户数据、软件设置。 但机器使用几</description>
    </item>
    
    <item>
      <title>macOS常用软件</title>
      <link>https://my101du.github.io/1/01/macos%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/macos%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</guid>
      <description>macOS常用软件 macOS（前身是 OS X）是非常好用的操作系统，同时还有很多工具和软件能提高我们的工作效率。 开发人员工具箱 iTerm OS X 默认的终端功</description>
    </item>
    
    <item>
      <title>Magento 学习</title>
      <link>https://my101du.github.io/1/01/magento-study/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://my101du.github.io/1/01/magento-study/</guid>
      <description>Magento 是一款国外的商城系统 下载 下载地址 https://www.magentocommerce.com/download 可能是由于家里的网络原因，直接下载压缩包一直失败，翻墙也会中断（也不能复制链接直接通过迅雷等来下载），只</description>
    </item>
    
  </channel>
</rss>
